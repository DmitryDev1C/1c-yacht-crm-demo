#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновлениеСуммыЗаказа()
	Объект.СуммаЗаказа = Объект.ЦенаСудна + Объект.СписокАксессуаров.Итог("СуммаСНДС") + 
	Объект.ДополнительныеРаботы.Итог("ЦенаСНДС");
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеСуммыПредоплаты()
	Объект.СуммаПредоплаты = Объект.СуммаЗаказа * (Объект.ПроцентПредоплаты / 100);	
КонецПроцедуры

&НаСервере
Процедура ПроверкаПроведенияДоговора()
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Договоры.Проведен КАК Проведен
	|ИЗ
	|	Документ.Договоры КАК Договоры
	|ГДЕ
	|	Договоры.Заказ = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДоговорПроведен = ВыборкаДетальныеЗаписи.Проведен;
		Если ДоговорПроведен Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры


#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФорм
&НаСервере
Процедура НаименованиеСуднаПриИзмененииНаСервере(Продукция)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Продукция.МодельЯхты КАК МодельЯхты,
	|	Продукция.ТипЯхты КАК ТипЯхты,
	|	Продукция.Материал КАК Материал,
	|	Продукция.Цвет КАК СтандартныйЦвет,
	|	Продукция.КоличествоМест КАК КоличествоМест,
	|	Продукция.НаличиеМачты КАК НаличиеМачты,
	|	ЦеныНоменклатурыСрезПоследних.ЦенаСНДС КАК ЦенаСНДС
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, Номенклатура = &Продукция) КАК ЦеныНоменклатурыСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Продукция КАК Продукция
	|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = Продукция.Ссылка
	|ГДЕ
	|	Продукция.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Продукция", Продукция);
	Запрос.УстановитьПараметр("Ссылка", Продукция);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если РезультатЗапроса.Пустой() Тогда 
		Сообщить("Данных недостаточно");
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Попытка
				НоваяСтрока = Объект.СпецификацияСудна.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
				Объект.ЦенаСудна = ВыборкаДетальныеЗаписи.ЦенаСНДС;
				Объект.МодельЯхты = ВыборкаДетальныеЗаписи.МодельЯхты;
			Исключение
				Сообщить("Спецификация не заполнена");
			КонецПопытки;
		КонецЦикла;		
	КонецЕсли;		
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеСуднаПриИзменении(Элемент)
	Если Объект.НаименованиеСудна.Пустая() Тогда
				
		Объект.СпецификацияСудна.Очистить();
		Объект.ПроцентПредоплаты = 30;
		Объект.МодельЯхты = "";
		Объект.ЦенаСудна = 0;
		ОбновлениеСуммыЗаказа();
		ОбновлениеСуммыПредоплаты();
		
		Элементы.Предоплата.ТолькоПросмотр = Истина;
	Иначе
		Объект.СпецификацияСудна.Очистить();
		Продукция = Объект.НаименованиеСудна;
		НаименованиеСуднаПриИзмененииНаСервере(Продукция);
		ОбновлениеСуммыЗаказа();
		ОбновлениеСуммыПредоплаты();
		Элементы.Предоплата.ТолькоПросмотр = Ложь;
		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СуммаПредоплатыПриИзменении(Элемент)
	
	ОчиститьСообщения();				
	Если Объект.СуммаПредоплаты > Объект.СуммаЗаказа Тогда
		Сообщить("Сумма предоплаты больше суммы заказа");
		Объект.СуммаПредоплаты = Объект.СуммаЗаказа;
		Объект.ПроцентПредоплаты = 100;
	ИначеЕсли
		Объект.СуммаПредоплаты < Окр(Объект.СуммаЗаказа * 0.3, 2) Тогда
		Сообщить("Сумма предоплаты меньше минимальной");
		Объект.СуммаПредоплаты = Окр(Объект.СуммаЗаказа * 0.3, 2);
		Объект.ПроцентПредоплаты = 30;
	Иначе
		Объект.ПроцентПредоплаты = Объект.СуммаПредоплаты / Объект.СуммаЗаказа * 100;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентПредоплатыПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	
	ОбновлениеСуммыПредоплаты();
	Если Объект.ПроцентПредоплаты < 30 Тогда
		Сообщить("Процент предоплаты меньше минимального");
		Объект.ПроцентПредоплаты = 30;
		
	ИначеЕсли
		Объект.ПроцентПредоплаты > 100 Тогда
		Сообщить("Процент предоплаты больше максимального");
		Объект.ПроцентПредоплаты = 100;
	Иначе
		Объект.ПроцентПредоплаты = Объект.СуммаПредоплаты / Объект.СуммаЗаказа * 100;
	КонецЕсли;
	ОбновлениеСуммыПредоплаты();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентПредоплаты1ПриИзменении(Элемент)
	ОчиститьСообщения();
	ОбновлениеСуммыЗаказа();
	ОбновлениеСуммыПредоплаты();
	Объект.ПроцентПредоплаты = Окр(Объект.ПроцентПредоплаты, 1);
КонецПроцедуры


&НаСервере
Процедура ДоставкаПриИзмененииНаСервере()
	Элементы.ГруппаДанныеДоставки.Видимость = Объект.Доставка;
КонецПроцедуры

&НаКлиенте
Процедура ДоставкаПриИзменении(Элемент)
	Объект.ДанныеДоставки.Очистить();
	ДоставкаПриИзмененииНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПокраскаПриИзмененииНаСервере()
	Элементы.ГруппаДополнительныеРаботы.Видимость = Объект.Покраска;
КонецПроцедуры

&НаКлиенте
Процедура ПокраскаПриИзменении(Элемент)
	Объект.ДополнительныеРаботы.Очистить();
	ОбновлениеСуммыЗаказа();
	ОбновлениеСуммыПредоплаты();	
	ПокраскаПриИзмененииНаСервере();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы
&НаКлиенте
Процедура СписокАксессуаровАксессуарПриИзменении(Элемент)
	Стр = Элементы.СписокАксессуаров.ТекущиеДанные;
	Стр.ЦенаСНДС = ОбщиеФункции.ПолучениеЦенСНДС(Объект.Дата, Стр.Аксессуар);
	Стр.СуммаСНДС = Стр.ЦенаСНДС * Стр.Количество;
	ОбновлениеСуммыЗаказа();
	ОбновлениеСуммыПредоплаты();
КонецПроцедуры

&НаКлиенте
Процедура СписокАксессуаровКоличествоПриИзменении(Элемент)
	Стр = Элементы.СписокАксессуаров.ТекущиеДанные;
	Стр.СуммаСНДС = Стр.ЦенаСНДС * Стр.Количество;
	ОбновлениеСуммыЗаказа();
	ОбновлениеСуммыПредоплаты();
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРаботыДополнительныйЦветПриИзменении(Элемент)
	Стр = Элементы.ДополнительныеРаботы.ТекущиеДанные;
	Стр.ЦенаСНДС = ОбщиеФункции.ПолучениеЦенСНДС(Объект.Дата, Стр.ДополнительныйЦвет);
	ОбновлениеСуммыЗаказа();
	ОбновлениеСуммыПредоплаты();
КонецПроцедуры

&НаКлиенте
Процедура СписокАксессуаровПослеУдаления(Элемент)
	ОбновлениеСуммыЗаказа();
	ОбновлениеСуммыПредоплаты();
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРаботыПослеУдаления(Элемент)
	ОбновлениеСуммыЗаказа();
	ОбновлениеСуммыПредоплаты();
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриОткрытииНаСервере()
	ПроверкаПроведенияДоговора();
	ПокраскаПриИзмененииНаСервере();
	ДоставкаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
	ОбновлениеСуммыЗаказа();
	ОбновлениеСуммыПредоплаты();
	Если Не ЗначениеЗаполнено(Объект.НаименованиеСудна) Тогда
		Элементы.Предоплата.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПроверкаПроведенияДоговора();
КонецПроцедуры
	
#КонецОбласти 