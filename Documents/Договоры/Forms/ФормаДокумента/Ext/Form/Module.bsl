#Область  ОбработкиКомандФормы

&НаСервере
Процедура РассчитатьГрафикПлатежейНаСервере()
	ОстатокПоДоговору = Объект.СуммаЗаказа - Объект.СуммаПредоплаты;
	КоличествоПлатежейДоговора = объект.КоличествоПлатежей;
	СуммаПлатежа = Окр(ОстатокПоДоговору / КоличествоПлатежейДоговора, 2);
	ПредыдущийОстаток = ОстатокПоДоговору;
	Для Сч = 1 По КоличествоПлатежейДоговора - 1  Цикл
		Стр = Объект.ГрафикПлатежей.Добавить();
		Стр.ДатаПлатежа = ДобавитьМесяц(Объект.ДатаПервогоПлатежа, Сч - 1);
		Стр.СуммаПлатежа = СуммаПлатежа;
		ПредыдущийОстаток = ПредыдущийОстаток - СуммаПлатежа;
		Стр.ОстатокЗадолженности = ПредыдущийОстаток; 
	КонецЦикла;
	
	Стр = Объект.ГрафикПлатежей.Добавить();
	Стр.ДатаПлатежа = ДобавитьМесяц(Объект.ДатаПервогоПлатежа, Сч - 1);
	Стр.СуммаПлатежа = ПредыдущийОстаток;
	Стр.ОстатокЗадолженности = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьГрафикПлатежей(Команда)
	ОчиститьСообщения();
	Объект.ГрафикПлатежей.Очистить();
	Если Объект.КоличествоПлатежей = 0 Или Не ЗначениеЗаполнено(Объект.ДатаПервогоПлатежа) Тогда
		Сообщить("Введите количество платежей и дату первого платежа");
	ИначеЕсли КонецДня(Объект.ДатаПервогоПлатежа) < Объект.Дата Тогда
		Сообщить("Дата первого платежа не может быть раньше даты договора");
	Иначе
		РассчитатьГрафикПлатежейНаСервере();	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПорядокРабот(Команда)
	ОчиститьСообщения();
	Объект.ПорядокРабот.Очистить();
	Если Не ЗначениеЗаполнено(Объект.ДатаЗапускаВПроизводство) Тогда
		Сообщить("Укажите дату начала работ");
	ИначеЕсли Объект.ДатаЗапускаВПроизводство < НачалоДня(ТекущаяДата()) Тогда
		Сообщить("Дата запуска в производство не может быть раньше текущей даты");
	Иначе		
		ЗаполнитьПорядокРаботНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПорядокРаботНаСервере()
	Тз = Объект.НаименованиеСудна.ПорядокРабот.Выгрузить();
	Тз.Колонки.Добавить("ДатаНачалаРаботы");
	Тз.Колонки.Добавить("ДатаОкончанияРаботы");
	НачалоРабот = Объект.ДатаЗапускаВПроизводство;
	Для каждого Стр Из Тз Цикл
		Стр.ДатаНачалаРаботы = НачалоРабот;
		Стр.ДатаОкончанияРаботы = НачалоРабот + Стр.КоличествоДней * 86400;
		НачалоРабот = Стр.ДатаОкончанияРаботы + 86400;
	КонецЦикла;
	Объект.ПорядокРабот.Загрузить(Тз);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ДоставкаПриИзмененииНаСервере()
	Элементы.ГруппаДанныеДоставки.Видимость = Объект.Доставка;
КонецПроцедуры

&НаКлиенте
Процедура ДоставкаПриИзменении(Элемент)
	Объект.ДанныеДоставки.Очистить();
	ДоставкаПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработкиСобытийФормы 


&НаСервере
Процедура ПроверкаПроведения()
	
	Если Объект.Проведен Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Договоры.Заказ КАК Заказ
	|ИЗ
	|	Документ.Договоры КАК Договоры
	|ГДЕ
	|	Договоры.Проведен = &Истина
	|	И Договоры.Заказ = &ЗаказДоговора";
	
	Запрос.УстановитьПараметр("ЗаказДоговора", Объект.Заказ);
	Запрос.УстановитьПараметр("Истина", Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если Не РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Сообщить(СтрШаблон("Договор с %1 уже существует", ВыборкаДетальныеЗаписи.Заказ));
		КонецЦикла;
	Иначе
		Сообщить("Договор успешно проведен");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПроверкаПроведения();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПроверкаПроведения();
	ДоставкаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	ДоставкаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

#КонецОбласти 


